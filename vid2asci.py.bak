#-----------------------------------------------
# This is small program to convert any video to 
# ascii.
#
# It use webcam 
# TODO:
# 1. Stablization 
# 2. Option to choose which to vid feed
#-----------------------------------------------




import cv2 as cv
import copy
video = 'bad_apple.mp4'
vid = cv.VideoCapture(video)

def toAscii(img, width_div = 5, height_div = 18):

    #NOTE:
    #----------------------------------------
    # This function convert to ascii 
    # The width_div and height_div are the divisor
    # for ascii screen size, the default size is
    # given. You may tune with the value to fit 
    # need.
    #----------------------------------------

    symbols = ['+','-',',','!','*','^','+','.']
    # symbols = ["$", "#" ,"S" ,"%" ,"?" ,"*" ,"+" , ";", ":", "," "."]
    size = len(symbols)

    w, h = img.shape

    img = cv.resize(img, (w//width_div, h//height_div))

    output = " "
    for row in img:
        for i in row:
            output += symbols[i % size]
        output+='>'

    last = 0
    for index, _ in enumerate(copy.copy(output)):
        if output[index] == '>':
            print(output[last:index + 1])
            last = index + 1


while True:
    ret, img = vid.read()
    img = cv.flip(img, 1)


    if not ret:
        print('camera not found')
        exit(1)
    img = cv.cvtColor(img, cv.COLOR_BGR2GRAY)
    threshold = 85
    img = cv.threshold(img, threshold, 255, cv.THRESH_BINARY)[1]
    
    img_height = img.shape[1]

    # toAscii(img,height_div = img_height//35)
    toAscii(img,)
    cv.imshow('frame', img)

    if cv.waitKey(1) & 0xFF == ord('q'):
        break

vid.release()
cv.destroyAllWindows()
